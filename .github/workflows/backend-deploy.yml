name: Deploy Backend to Elastic Beanstalk

on:
  push:
    branches: [ master ]          # change to main if needed
    paths:
      - "backend/**"

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: af-south-1
  EB_APP: h2go-api
  EB_ENV: H2go-api-env

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::101573021364:role/h2go-eb-github-deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Debug AWS identity (optional)
        run: aws sts get-caller-identity

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend/package-lock.json

      - name: Install & Build (backend)
        working-directory: backend
        run: |
          npm ci
          npm run build

      - name: Create deploy bundle
        run: |
          rm -rf deploy && mkdir -p deploy/dist
          cp backend/package.json deploy/
          if [ -f backend/package-lock.json ]; then cp backend/package-lock.json deploy/; fi
          if [ -f backend/Procfile ]; then cp backend/Procfile deploy/; fi
          rsync -a backend/dist/ deploy/dist/
          (cd deploy && zip -r ../app.zip .)

      - name: Compute EB bucket name
        id: bucket
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "ACCOUNT_ID=$ACCOUNT_ID" >> $GITHUB_ENV
          # Default EB bucket name pattern:
          echo "EB_BUCKET=elasticbeanstalk-${{ env.AWS_REGION }}-${ACCOUNT_ID}" >> $GITHUB_ENV
          echo "VERSION_LABEL=v-${{ github.sha }}" >> $GITHUB_ENV
          echo "S3_KEY=appversions/${{ env.EB_APP }}-${{ github.sha }}.zip" >> $GITHUB_ENV

      - name: Ensure EB bucket exists (ok if already exists)
        run: |
          if ! aws s3 ls "s3://${EB_BUCKET}" >/dev/null 2>&1; then
            aws s3 mb "s3://${EB_BUCKET}" --region "${AWS_REGION}"
          fi

      - name: Upload application bundle to S3
        run: |
          aws s3 cp app.zip "s3://${EB_BUCKET}/${S3_KEY}"

      - name: Create EB application version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name "${EB_APP}" \
            --version-label "${VERSION_LABEL}" \
            --description "GitHub Actions deploy ${GITHUB_SHA}" \
            --source-bundle S3Bucket="${EB_BUCKET}",S3Key="${S3_KEY}" \
            --auto-create-application

      - name: Update EB environment to new version
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name "${EB_ENV}" \
            --version-label "${VERSION_LABEL}"
