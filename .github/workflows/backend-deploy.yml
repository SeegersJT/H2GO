name: Deploy Backend to Elastic Beanstalk

on:
  push:
    branches: [ master ]          # change to main if needed
    paths:
      - "backend/**"

permissions:
  id-token: write                 # required for OIDC
  contents: read

env:
  AWS_REGION: af-south-1
  EB_APP: h2go-api
  EB_ENV: H2go-api-env

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        id: awscreds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::101573021364:role/h2go-eb-github-deploy
          aws-region: ${{ env.AWS_REGION }}

      # Optional: verify we are authenticated
      - name: Debug AWS identity
        run: aws sts get-caller-identity

      - name: Detect lockfile
        id: lock
        run: |
          if [ -f backend/package-lock.json ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "lock=backend/package-lock.json" >> $GITHUB_OUTPUT
          elif [ -f backend/yarn.lock ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "lock=backend/yarn.lock" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "lock=" >> $GITHUB_OUTPUT
          fi

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: ${{ steps.lock.outputs.manager }}
          cache-dependency-path: ${{ steps.lock.outputs.lock }}

      - name: Install & Build (backend)
        working-directory: backend
        run: |
          if [ "${{ steps.lock.outputs.manager }}" = "yarn" ]; then
            corepack enable
            yarn install --frozen-lockfile
            yarn build
          else
            npm ci
            npm run build
          fi

      - name: Create deploy bundle
        run: |
          rm -rf deploy && mkdir -p deploy/dist
          cp backend/package.json deploy/
          if [ -f backend/package-lock.json ]; then cp backend/package-lock.json deploy/; fi
          if [ -f backend/yarn.lock ]; then cp backend/yarn.lock deploy/; fi
          if [ -f backend/Procfile ]; then cp backend/Procfile deploy/; fi
          rsync -a backend/dist/ deploy/dist/
          (cd deploy && zip -r ../app.zip .)

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          region: ${{ env.AWS_REGION }}
          application_name: ${{ env.EB_APP }}
          environment_name: ${{ env.EB_ENV }}
          version_label: v-${{ github.sha }}
          deployment_package: app.zip
